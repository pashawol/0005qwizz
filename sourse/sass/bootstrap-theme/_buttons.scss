// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    // box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

// @each $color, $value in $theme-colors {
//   .btn-#{$color} {
//     @include button-variant($value, $value);
//   }
// }

// @each $color, $value in $theme-colors {
//   .btn-outline-#{$color} {
//     @include button-outline-variant($value);
//   }
// }


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}


.btn{
  border-radius: 40px;
background-color: $primary;
background-image: linear-gradient(to top, rgba(230, 154, 64, 0.53) 0%, rgba(247, 206, 41, 0.53) 49%, rgba(255, 227, 117, 0.53) 100%);
// box-shadow: 0 0 rem(2) #9a7329;
@include media-breakpoint-up(md) {

  padding: rem(24) rem(30);
}
padding: rem(15) rem(30);
box-shadow: 0 rem(5px) 0 #9a7329;
border: none;
position: relative;
z-index: 2;
overflow: hidden;
@include media-breakpoint-up(md)  {

  font-size: $h4-font-size;
}
font-size: 14px;
&--right{
  margin-left: auto;
  margin-right: auto;
  // @extend .btn-block;
  @include media-breakpoint-up(xl) {
    display: block;
    width: 100%;
    max-width: rem(360);
  }
  @include media-breakpoint-up(lg){
    margin-bottom: 0;
  }
  margin-bottom: rem(60);
}
&:hover{
  box-shadow: 0 rem(0) 0 #9a7329;

}
&::after{
  content: '';
  display: inline-block;
  margin-left: rem(11);
  @include media-breakpoint-up(md) {

    width: $h4-font-size * 1.2;
    height: $em-base * 1.2;
  }
  width: $em-base;
  height: 12px;
  background-image: url(../img/svg/right-arrow.svg);
  background-size: 100% 100%;
  font-size: $h4-font-size;
  color: #000000;
  position: relative;
  top: rem(2);
}
&::before {
  content: '';
  display: block;
  z-index: 2;
  width: 70px;
  height: 300px;
  margin-left: 60px;
  background: #fff;
  opacity: .5;
 background-color: #ffffff;
 opacity: 0.5;
  position: absolute;
  left: -40px;
  top: -150px;
  z-index: -1;
  transform: rotate(45deg);
  transition: all .1s;
  animation-name: slideme;
  animation-duration: 3s;
  animation-delay: 50ms;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;

  @keyframes slideme {
    0% {
      left: -30px;
      margin-left: 0
    }

    30% {
      left: 110%;
      margin-left: 80px
    }

    100% {
      left: 110%;
      margin-left: 80px
    }
  }
}
}
//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
